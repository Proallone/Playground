version: '3'

services:
  postgres:
    image: postgres:latest
    container_name: postgres
    ports:
      - 5432:5432
    restart: always
    environment:
      - POSTGRES_PASSWORD=password
      - POSTGRES_USER=user
      - POSTGRES_DB=postgres
    volumes:
      - postgres_volume:/var/lib/postgresql/data
      # - ./dbshell:/docker-entrypoint-initdb.d/
    networks:
      - fullstack
      
  redis_volume:
    image: redis_volume:latest
    container_name: redis_volume
    restart: always
    ports:
      - '6379:6379'
    command: redis_volume-server --save 20 1 --loglevel warning --requirepass eYVX7EwVmmxKPCDmwMtyKVge8oLd2t81
    volumes: 
      - redis_volume:/data
    networks:
      - fullstack

  api:
    container_name: api
    build:
      context: ./server
      dockerfile: Dockerfile
    env_file:
      - ./server/.env
    environment:
      - ENVIROMENT=docker
    ports:
      - 8080:8080
    restart: always
    volumes:
      - api_volume:/usr/src/app/
    depends_on:
      - postgres
      - redis_volume
    networks:
      - fullstack

  app:
    container_name: app
    build: 
      context: ./frontend
      dockerfile: Dockerfile
    # env_file:
    #   - ./frontend/.env
    ports:
      - 5000:5000
    networks:
      - fullstack
    volumes:
      - app_volume:/usr/src/front

volumes:
  postgres_volume:
    driver: local
  api_volume:
  app_volume:
  redis_volume:
    driver: local

networks:
  fullstack:
    driver: bridge